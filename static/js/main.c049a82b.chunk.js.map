{"version":3,"sources":["components/Dungeon/Dice.js","components/Dungeon/Stairs.js","components/Dungeon/Chamber.js","components/Dungeon/Passage.js","components/Dungeon/Door.js","components/Dungeon/Dungeon.js","components/Dungeon/StartingArea.js","components/App/App.js","serviceWorker.js","index.js"],"names":["roll","dice","Math","floor","random","Stairs","stairs","type","exits","Chamber","chamber","description","Passage","passage","Door","door","locked","trapped","LeadsTo","length","Dungeon","props","state","sections","handleClick","bind","back","newSections","this","push","startingArea","StartingArea","setState","event","index","target","value","newSection","pop","className","role","aria-label","map","section","onClick","exit","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c049a82b.chunk.js","sourcesContent":["export function roll(dice){\n    return Math.floor(Math.random() * Math.floor(dice)) + 1;;\n}","import {roll} from './Dice';\n\n\nexport const STAIRS = 5;\n\nexport function Stairs(){\n    var result = roll(10);\n    var stairs = {\n        type: STAIRS,\n        exits: 0\n    };\n    switch(result) {\n        default:\n            stairs.description =  \"No stairs yet!\";\n            break;\n    } \n\n    return stairs;\n}","import {roll} from './Dice';\n\n\nexport const CHAMBER = 4;\n\nexport function Chamber(){\n    var result = roll(10);\n    var chamber = {\n        type: CHAMBER,\n        exits: 0\n    };\n    switch(result) {\n        case 1:\n        case 2:\n            chamber.description = \"Square, 20 x 20 ft\";\n            break;\n        case 3:\n        case 4:\n            chamber.description = \"Square, 30 x 30 ft\";\n            break;\n        case 5:\n        case 6:\n            chamber.description = \"Square, 40 x 40 ft\";\n            break;\n        case 7:\n        case 8:\n        case 9:\n            chamber.description = \"Rectangle, 20 x 30 ft\";\n            break;\n        case 10:\n        case 11:\n        case 12: \n            chamber.description = \"Rectangle, 30 x 40 ft\";\n            break;\n        case 13:\n        case 14:\n            chamber.description = \"Rectangle, 40 x 50 ft\";\n            break;\n        case 15:\n            chamber.description = \"Rectangle, 50 x 80 ft\";\n            break;\n        case 16:\n            chamber.description = \"Circle, 30ft diameter\";\n            break;\n        case 17:\n            chamber.description = \"Circle, 50ft diameter\";\n            break;\n        case 18:\n            chamber.description = \"Octagon, 40 x 40ft diameter\";\n            break;\n        case 19:\n            chamber.description = \"Octagon, 60 x 60ft diameter\";\n            break;\n        default:\n            chamber.description =  \"Trapezoid, roughly 40 x 60ft\";\n            break;\n    } \n    return chamber;\n}","import {Door} from './Door';\nimport {roll} from './Dice';\nimport {Stairs} from './Stairs';\nimport {Chamber} from './Chamber';\nexport const PASSAGE = 2;\n\n\nexport function Passage(){\n    var result = roll(20);\n    var passage = {\n        type: PASSAGE,\n        exits:[]\n    }\n    switch(result){\n        case 1:\n        case 2:\n            passage.description = \"Continue straight 30ft, no doors or side passages\";\n            break;\n        case 3:\n            passage.description =  \"Continue straight 20ft./ door to the right, then an additional 10ft. ahead\";\n            passage.exits = [Door(), Passage()];\n            break;\n        case 4:\n            passage.description =  \"Continue straight 20ft./ door to the left, then an additional 10 ft. ahead\";\n            passage.exits = [Door(), Passage()];\n            break;\n        case 5: \n            passage.description =  \"Continue straight 20ft; passage ends in a door\";\n            passage.exits = [Door()];\n            break;\n        case 6:\n        case 7: \n            passage.description =  \"Continue straight 20ft; side passage to the right, then an additional 10 ft ahead\";\n            passage.exits = [Passage(), Passage()];\n            break;\n        case 8:\n        case 9:\n            passage.description =  \"Continue straight 20ft; side passage to the left, then an additional 10 ft ahead\";\n            passage.exits = [Passage(), Passage()];\n            break;\n        case 10:\n            passage.description =  \"Continue straight 20ft; comes to a dead end; 10 % chance of a secret door\";\n            passage.exits = [Door(), Passage()];\n            break;\n        case 11:\n        case 12:\n            passage.description =  \"Continue straight 20ft; then the passage turns left and continues 10 ft\";\n            passage.exits = [Passage()];\n            break;\n        case 13:\n        case 14:\n            passage.description =  \"Continue straight 20ft; then the passage turns right anc continues 10ft\";\n            passage.exits = [ Passage()];\n            break;\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n            passage.description =  \"Chamber\";\n            passage.exits = [Chamber()];\n            break;\n        default:\n            passage.description =  \"Stairs\";\n            passage.exits = [Stairs()];\n            break;\n    }\n    return passage;\n}","import {roll} from './Dice';\nimport {Passage} from './Passage';\nimport {Chamber} from './Chamber';\nimport {Stairs} from './Stairs';\n\nexport const DOOR = 3;\n\nexport function Door(){\n    var result = roll(20);\n    var door = {\n        type: DOOR,\n        exits:[],\n        locked: false,\n        trapped: false\n    }\n    switch(result){\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5: \n        case 6:\n        case 7: \n        case 8:\n        case 9:\n        case 10:\n            door.description =  \"Wooden\";\n            door.exits = [LeadsTo()];\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n        case 11:\n        case 12:\n            door.description =  \"Wooden, barred or locked\";\n            door.exits = [LeadsTo()];\n            door.locked = true;\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n        case 13:\n            door.description =  \"Stone\";\n            door.exits = [LeadsTo()];\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n        case 14:\n            door.description =  \"Stone, barred or locked\";\n            door.exits = [LeadsTo()];\n            door.locked = true;\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n        case 15:\n            door.description =  \"Iron\";\n            door.exits = [LeadsTo()];\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n        case 16:\n            door.description =  \"Iron, barred or locked\";\n            door.exits = [LeadsTo()];\n            door.locked = true;\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n        case 17:\n            door.description =  \"Portcullis\";\n            door.exits = [LeadsTo()];\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n        case 18:\n            door.description =  \"Portcullis, barred or locked\";\n            door.exits = [LeadsTo()];\n            door.locked = true;\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n        case 19:\n            door.description =  \"Secret door\";\n            door.exits = [LeadsTo()];\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n        default:\n            door.description =  \"Secret door, barred or locked\";\n            door.exits = [LeadsTo()];\n            door.locked = true;\n            door.trapped = door.exits.length === 0 ? true : false;\n            break;\n    }\n    return door;\n}\n\nfunction LeadsTo(){\n    var result = roll(20);\n    switch(result){\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n            return Passage();\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n            return Chamber();\n        case 19:\n            return Stairs();\n        default:\n            return;\n    }\n}\n","import React from 'react';\nimport { StartingArea, STARTING_AREA } from './StartingArea';\nimport './Dungeon.css';\nclass Dungeon extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            sections: []\n        };   \n        this.handleClick = this.handleClick.bind(this);\n        this.back = this.back.bind(this);\n    }\n\n    componentDidMount() {\n        var newSections = this.state.sections;\n        newSections.push(StartingArea());\n        this.setState({sections: newSections});\n    }\n\n    handleClick(event) {    \n            var index = event.target.value;\n            var newSections = this.state.sections;\n        \n            var newSection =  newSections[newSections.length -1].exits[index];\n            newSections.push(newSection);\n            this.setState(newSections);\n        \n    }\n\n    back() {    \n       \n        var newSections = this.state.sections;\n        newSections.pop();\n        this.setState(newSections);\n    \n    }\n    \n\n    render() {\n       return <div className=\"dungeon\">\n                <span role=\"img\" aria-label=\"skull\">&#x1F480;</span>\n                <p>Refresh for a new dungeon</p>\n                <hr/>\n                {this.state.sections.map(section => (\n                    <div>\n                        <em>{section.description}</em>\n\n                        <p>Exits:</p>\n                        <ul>\n                            {\n                                section.type !== STARTING_AREA? \n                                <li>{\n                                    section === this.state.sections[this.state.sections.length -1] ? \n                                    <button onClick={this.back}>Back</button> :\n                                    <em>Back</em>\n                                }</li> :\n                                ''\n                            }\n                            {\n                                section.exits.length > 0 ? section.exits.map((exit, index) => (\n                                        <li>{\n                                            exit.locked !== true && exit.exits.length > 0 && section === this.state.sections[this.state.sections.length -1] ?\n                                            <button value={index} onClick={this.handleClick}>{exit.description}</button> :\n                                            <em>{exit.description}</em>\n                                        }</li> \n                                )) : ''\n                            }\n                        </ul>\n                        <hr/>\n                    </div>\n                ))}\n             </div>\n    }\n}\n\nexport default Dungeon;","import {roll} from './Dice';\nimport {Door} from './Door';\nimport {Passage} from './Passage';\nimport {Stairs} from './Stairs';\n\nexport const STARTING_AREA = 1;\nexport const PASSAGE = 2;\n\nexport function StartingArea(){\n    var result = roll(10);\n    var startingArea = {\n        type: STARTING_AREA,\n        exits: 0\n    };\n    switch(result) {\n        case 1:\n            startingArea.description = \"Square, 20 x 20 ft; passage on each wall\";\n            startingArea.exits = [Passage(),Passage(),Passage()];\n            break;\n        case 2:\n            startingArea.description =  \"Square, 20 x 20 ft; door on two walls, passage on third wall\";\n            startingArea.exits = [Door(),Door(),Passage()];\n            break;\n        case 3:\n            startingArea.description = \"Square, 40 x 40 ft; door on three walls\";\n            startingArea.exits = [Door(),Door(),Door()];\n            break;\n        case 4:\n            startingArea.description = \"Rectangle, 80 x 20 ft; passage on each wall\";\n            startingArea.exits = [Door(),Door(),Door()];\n            break;\n        case 5:\n            startingArea.description = \"Rectangle, 20 x 40 ft; passage on each wall\";\n            startingArea.exits = [Passage(),Passage(),Passage()];\n            break;\n        case 6:\n            startingArea.description = \"Circle, 40 ft diameter; one passage at each cardinal direction\";\n            startingArea.exits = [Passage(),Passage(),Passage()];\n            break;\n        case 7:\n            startingArea.description = \"Circle, 40 ft diameter; one passage at each cardinal direction; well in middle of room (might lead down to lower level)\";\n            startingArea.exits = [Passage(),Passage(),Passage(),Stairs()];\n            break;\n        case 8:\n            startingArea.description = \"Square 20 x 20 ft; door on two walls, passage on third wall, secret door on fourth wall\";\n            startingArea.exits = [Door(),Door(),Passage(),Door()];\n            break;   \n        case 9:\n            startingArea.description =  \"Passage, 10 ft wide; T intersection\";\n            startingArea.exits = [Passage(),Passage()];\n            break;\n        default:\n            startingArea.description =  \"Passage, 10ft wide; four-way intersection\";\n            startingArea.exits = [Passage(),Passage(),Passage(),Passage()];\n            break;\n    } \n    return startingArea;\n}","import React from 'react';\nimport './App.css';\nimport Dungeon from '../Dungeon/Dungeon';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header >\n        Zanzer's Dungeon\n      </header>\n      <Dungeon />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}